- name: Run a system upgrade and install python
  hosts: archpi
  remote_user: alarm
  become: true
  become_method: ansible.builtin.su
  become_user: root
  ignore_unreachable: true
  gather_facts: false
  serial: 1
  vars:
    ansible_user: alarm
    ansible_ssh_pass: alarm
    ansible_become_pass: root
    ansible_become_method: su
    ansible_host_key_checking: false
  tasks:
    - name: Init Keyring
      ansible.builtin.raw: |
        bash -c "test -e /usr/bin/python || ( \
          pacman-key --init && pacman-key --populate archlinuxarm \
          && pacman -Syu --noconfirm && pacman -S python --noconfirm \
        )"
      register: python_bootstrap
      changed_when: python_bootstrap.stdout != ""

- name: Create local user, add to sudo, secure ssh
  hosts: archpi
  remote_user: alarm
  become: true
  become_method: ansible.builtin.su
  become_user: root
  ignore_unreachable: true
  vars:
    ansible_user: alarm
    ansible_ssh_pass: alarm
    ansible_become_pass: root
    ansible_become_method: su
    ansible_host_key_checking: false
  tasks:
    - name: PACMAN INITIALISED
      ansible.builtin.include_tasks: ./tasklists/pacman-init.yaml
      when: ansible_facts['nodename'] is defined

    - name: LOCAL USER CREATED
      ansible.builtin.include_tasks: ./tasklists/local-user.yaml
      when: ansible_facts['nodename'] is defined

    - name: Remove previous hard-coded host key
      ansible.builtin.file:
        state: absent
        path: "{{ item }}"
      with_items:
        - /etc/ssh/ssh_host_ed25519_key
        - /etc/ssh/ssh_host_ed25519_key.pub
      when: ansible_facts['nodename'] is defined

    - name: SUDO CONFIGURED
      ansible.builtin.include_tasks: ./tasklists/sudo.yaml
      when: ansible_facts['nodename'] is defined

    - name: SSH CONFIGURED
      ansible.builtin.include_tasks: ./tasklists/ssh.yaml
      when: ansible_facts['nodename'] is defined

    - name: Reboot
      remote_user: alexw
      ansible.builtin.reboot:
        post_reboot_delay: 45
        reboot_timeout: 10
      when: ansible_facts['nodename'] is defined
